
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
    
    СтандартнаяОбработка = Ложь; 
    
    НастройкиОтчета = КомпоновщикНастроек.ПолучитьНастройки(); 
    
    Настройки = НастройкиОтчета;
    ЭД = Настройки.ПараметрыДанных.Элементы.Найти("Ссылки");
    ЭД.Значение = ПолучитьТолькоДействующихСотрудников();
    ЭД.Использование = Истина;
    
    КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных; 
    МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиОтчета, ДанныеРасшифровки); 
    
    //Создадим и инициализируем процессор компоновки 
    
    ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных; 
    ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки, Истина); 
    
    //Создадим и инициализируем процессор вывода результата 
    
    ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент; 
    ПроцессорВывода.УстановитьДокумент(ДокументРезультат); 
    ПроцессорВывода.Вывести(ПроцессорКомпоновки);	
    ОбработатьМакетПередВыводом(ДокументРезультат,НастройкиОтчета);
    
    
КонецПроцедуры


Функция ПолучитьТолькоДействующихСотрудников ()
    
    УстановитьПривилегированныйРежим(Истина);
    
    список = новый СписокЗначений;
    Выборка = Справочники.Пользователи.Выбрать(,новый Структура("Недействителен,Служебный",Ложь,Ложь));
    
    Пока Выборка.Следующий() Цикл 
        ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(Выборка.ИдентификаторПользователяИБ);
        Если ПользовательИБ = Неопределено тогда 
            Продолжить;
        КонецЕсли;
        Если ПользовательИБ.АутентификацияСтандартная
            ИЛИ ПользовательИБ.АутентификацияОС
            ИЛИ ПользовательИБ.АутентификацияOpenID тогда 
            список.Добавить(Выборка.Ссылка);
        КонецЕсли;
        
    КонецЦикла;
    
    возврат список
    
КонецФункции


// Обрабатывает (объединяет, устанавливает ширину колонок, выводит доп. области) табличный документ
Процедура ОбработатьМакетПередВыводом(Результат,НастройкиОтчета)
    
    ЭД = НастройкиОтчета.ПараметрыДанных.Элементы.Найти("Период");
    // ГОРИЗОНТАЛЬНОЕ ОБЪЕДИНЕНИЕ
    мас_объединяемых = Новый Массив;
    мас_объединяемых.Добавить("Январь");
    мас_объединяемых.Добавить("Февраль");
    мас_объединяемых.Добавить("Март");
    мас_объединяемых.Добавить("Апрель");
    мас_объединяемых.Добавить("Май");
    мас_объединяемых.Добавить("Июнь");
    мас_объединяемых.Добавить("Июль");
    мас_объединяемых.Добавить("Август");
    мас_объединяемых.Добавить("Сентябрь");
    мас_объединяемых.Добавить("Октябрь");
    мас_объединяемых.Добавить("Ноябрь");
    мас_объединяемых.Добавить("Декабрь");
    
    для с = год(ЭД.Значение.ДатаНачала) по год(ЭД.Значение.ДатаОкончания) Цикл 
        мас_объединяемых.Добавить(Формат(с,"ЧГ = 0"));
    КонецЦикла;
    
    для Каждого обл из мас_объединяемых Цикл 
        
        ОблОбъединение = Результат.НайтиТекст(обл,,,Истина, Истина); 
        СтрокаУ = 0; 
        СтрокаХ = 0;
        Если ОблОбъединение <> Неопределено Тогда 
            СтрокаУ = ОблОбъединение.Верх;
            СтрокаХ = ОблОбъединение.Лево;
        КонецЕсли;
        Если СтрокаУ <> 0 Тогда 
            
            ГраницаОбъединения = СтрокаХ;
            Для х = СтрокаХ По Результат.ШиринаТаблицы-1 Цикл
                ТекОбласть = Результат.Область(СтрокаУ,х+1);
                
                Если ТекОбласть.Текст = обл Тогда
                    ГраницаОбъединения = ГраницаОбъединения+1;
                Иначе
                    Прервать;
                КонецЕсли;
            КонецЦикла;
            
            Если ГраницаОбъединения <> СтрокаХ Тогда 
                ОблОбъединение = Результат.Область(СтрокаУ,СтрокаХ,СтрокаУ,ГраницаОбъединения);
                ОблОбъединение.Объединить();
                ОблОбъединение.ВертикальноеПоложение = ВертикальноеПоложение.Центр;
                ОблОбъединение.ГоризонтальноеПоложение = ГоризонтальноеПоложение.Центр;
            КонецЕсли;
            
        КонецЕсли;
        
    КонецЦикла;
    
КонецПроцедуры

