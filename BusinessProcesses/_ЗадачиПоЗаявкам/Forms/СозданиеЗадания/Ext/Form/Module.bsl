
#Область НачальноеЗаполнениеДанных

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    
    //КлючОбъекта = "Обработка._РабочийСтол_Заявки.Форма.СозданиеЗадания/Такси/НастройкиОкна";
    //ИмяПользователя = ПользователиИнформационнойБазы.ТекущийПользователь().Имя;
    //ХранилищеСистемныхНастроек.Удалить(КлючОбъекта,"", ИмяПользователя);
    //КлючСохраненияПоложенияОкна = Строка(Новый УникальныйИдентификатор);
    УстановитьДатуЗапрета();
    Если Объект.Ссылка.Пустая() тогда
        
        ЗаполнитьФорму(Объект, Отказ);
    иначе
        
        ЗаполнитьСотрудников();
        Оформление();
        
    КонецЕсли;
    
    Если РольДоступна("ПолныеПрава") или  РольДоступна("_ИзменениеВыполненныхПроверенныхЗаявок")  тогда
        Элементы.Заявка.ПараметрыВыбора = новый ФиксированныйМассив(новый Массив);    
    КонецЕсли;
    
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
    ЗаполнитьФорму(ТекущийОбъект);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьФорму(ТекущийОбъект,Отказ = Ложь)
    
    
    Если ТекущийОбъект.Ссылка.Пустая() тогда
        
        ТекущийОбъект.Автор = ПараметрыСеанса.ТекущийПользователь;
        Если ТекущийОбъект.Заявка.Контрагент.Блокировка и не РольДоступна("ПолныеПрава") тогда
            ОбщегоНазначения.СообщитьПользователю("У контрагента стоит блокировка. Нельзя создавать задания по данному контрагенту!", ТекущийОбъект.Заявка.Контрагент,,, Отказ);
        КонецЕсли;
        ТекущийОбъект.ДатаПлановая = ТекущаяДата();
    иначе
        
        //заполнение вложений
        Влож = ТекущийОбъект.Вложения.Получить();
        Если ТипЗнч(Влож) = Тип("Массив") тогда
            для Каждого Вл из  Влож цикл
                Если Вл.ПолучитьОбъект() <> Неопределено тогда
                    Вложения.Добавить(Вл);
                КонецЕсли;
            КонецЦикла;
        КонецЕсли;
        
        //форматированный документ
        _ОбщийМодульСервер.ЗаполнитьHTML(ЗаданиеHTML, ?(ТекущийОбъект.ЗаданиеHTML.Получить() = Неопределено, ТекущийОбъект.Наименование, ТекущийОбъект.ЗаданиеHTML.Получить()));
        
    КонецЕсли;
    
    
    ЗаполнитьСотрудников();
    Оформление();
    
КонецПроцедуры

&НаСервере
Процедура УстановитьДатуЗапрета()
    
    Даты = ДатыЗапретаИзмененияСлужебный.РассчитанныеДатыЗапретаИзменения();
    Если даты.найти(ПараметрыСеанса.ТекущийПользователь)= Неопределено тогда
        ДатаЗапрета = даты.найти(Перечисления.ВидыНазначенияДатЗапрета.ДляВсехПользователей).ДатаЗапрета;
    иначе
        Попытка
            ДатаЗапрета = даты.найти(ПараметрыСеанса.ТекущийПользователь).ДатаЗапрета;
        Исключение
            ДатаЗапрета = Дата(1,1,1);
        КонецПопытки;
        
    КонецЕсли;
    
    Если ДатаЗапрета = Дата(1,1,1) или РольДоступна("ПолныеПрава")тогда 
        ЭтаФорма.ТолькоПросмотр = Ложь;
    иначе
        ЭтаФорма.ТолькоПросмотр =  Объект.Дата <> Дата(1,1,1) и Объект.Дата <= ДатаЗапрета 
        или  Объект.ДатаЗавершения <> Дата(1,1,1) и Объект.ДатаЗавершения <= ДатаЗапрета
        или  Объект.ДатаПлановая <> Дата(1,1,1) и Объект.ДатаПлановая <= ДатаЗапрета;
    КонецЕсли;
    
КонецПроцедуры


#КонецОбласти

#Область Сохранение

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
    
    ЗаполнитьДанныеПередЗаписью(ТекущийОбъект);
    
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеПередЗаписью(ТекущийОбъект, Отмена = Ложь)
    
    
    ДанныеHTML = _ОбщийМодульСервер.СохранитьHTML(ЗаданиеHTML);
    Объект.Наименование = ДанныеHTML.мОписание;
    ТекущийОбъект.ЗаданиеHTML = новый ХранилищеЗначения(ДанныеHTML);
    
    ЗаполнитьТекстЗадания(ДанныеHTML);
    
    ТекущийОбъект.Вложения = новый ХранилищеЗначения(Вложения.ВыгрузитьЗначения());
    
    ЗаполнитьСотрудников();
    Оформление();
    
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
    
    Если ЗавершениеРаботы тогда
        Возврат
    КонецЕсли;
    
    Если Модифицированность тогда
        отказ = Истина;
        СтандартнаяОбработка = Ложь;
        ПоказатьВопрос(новый ОписаниеОповещения("ПередЗакрытиемЗавершение",ЭтаФорма),"Данные были изменены, сохранить ?",РежимДиалогаВопрос.ДаНет);
    КонецЕсли;
    
    
КонецПроцедуры


&НаКлиенте
Процедура ПередЗакрытиемЗавершение (Ответ, ДП) Экспорт
    
    Если Ответ = КодВозвратаДиалога.Да тогда
        Записать();
        Закрыть();
    иначе
        Модифицированность = Ложь;
        для Каждого стр из Вложения цикл
            Если стр.Пометка тогда
                УдалитьФайл(стр.Значение);
            КонецЕсли;
        КонецЦикла;
        Закрыть();
    КонецЕсли;
    
КонецПроцедуры


#КонецОбласти

#Область Оформление

&НаСервере
Процедура Оформление()
    
    
    Заголовок = ?(Объект.Срочная, "СРОЧНАЯ задача " , " Задача " ) + Объект.Номер;  
    ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(История,"БизнесПроцесс",Объект.Ссылка,,,Истина);
    Если Объект.Стартован тогда
        Элементы.ФормаСтартИЗакрыть.Видимость = Объект.Исполнитель <> Объект.Ссылка.Исполнитель;
        Элементы.ФормаСтарт.Видимость = Объект.Исполнитель <> Объект.Ссылка.Исполнитель;
        
        Если Объект.Исполнитель <> Объект.Ссылка.Исполнитель Тогда 
            объект.Стартован = Ложь;
        КонецЕсли;
        
    КонецЕсли;
    
    Элементы.ВидОбращения.Видимость = объект.Заявка.Техподдержка;
    Элементы.ФормаЗаписатьИЗакрыть.Видимость = не Элементы.ФормаСтартИЗакрыть.Видимость;
    
    Элементы.ФормаОтменить.Доступность      = не Объект.Завершен;
    Элементы.ЗаявкаПроверена.Видимость      = Объект.Заявка.Проверена;
    
    Элементы.НомерСервисДеск.Видимость = Объект.ВидОбращения = Справочники._ВидыОбращенийТехподдержки.Сервис_деск;
    
    СписокСерыхСтатусов = новый СписокЗначений;
    СписокСерыхСтатусов.Добавить(Перечисления._СтатусыЗаявки.Отменен);
    СписокСерыхСтатусов.Добавить(Перечисления._СтатусыЗаявки.НаУточнении);
    //СписокСерыхСтатусов.Добавить(Перечисления._СтатусыЗаявки.ПереданоВТестирование);
    //СписокСерыхСтатусов.Добавить(Перечисления._СтатусыЗаявки.Выполнена);
    Если СписокСерыхСтатусов.НайтиПоЗначению(Объект.Заявка.Статус) <> Неопределено 
        или Объект.Отменена тогда
        Элементы.ГруппаФормы.ЦветФона = WebЦвета.Серебряный;
    иначе
        Элементы.ГруппаФормы.ЦветФона = ?(Объект.Срочная, новый Цвет(233, 242, 255), новый Цвет);
    КонецЕсли;
    
    
    //ничего не скрываем для полных прав
    //и все доступно
    Если РольДоступна("ПолныеПрава") тогда 
        Возврат;
    КонецЕсли;
    
    Элементы.ФормаОтменить.Доступность = ПараметрыСеанса.ТекущийПользователь = объект.Автор;
    Если СписокСерыхСтатусов.НайтиПоЗначению(Объект.Заявка.Статус) <> Неопределено или (Объект.Отменена и Объект.Автор <> ПараметрыСеанса.ТекущийПользователь и не РольДоступна("_ИзменениеВыполненныхПроверенныхЗаявок")) тогда
        ЭтаФорма.ТолькоПросмотр             = Истина; Возврат
    КонецЕсли;
    
    Если Объект.Заявка.Проверена тогда
        ЭтаФорма.ТолькоПросмотр             = Истина; Возврат
    КонецЕсли;
    
    _ИзменениеОтветственногоВЗадачах = РольДоступна("_ИзменениеОтветственногоВЗадачах");
    
    Элементы.Ответственный.ТолькоПросмотр   = не _ИзменениеОтветственногоВЗадачах; 
    Элементы.Сотрудник.ТолькоПросмотр       = не (Объект.Автор = ПараметрыСеанса.ТекущийПользователь или _ИзменениеОтветственногоВЗадачах);
    Элементы.ГруппаДаты.ТолькоПросмотр      = не (Объект.Автор = ПараметрыСеанса.ТекущийПользователь или _ИзменениеОтветственногоВЗадачах);
    
    Элементы.ГруппаЗадание.ТолькоПросмотр   = не (Объект.Автор = ПараметрыСеанса.ТекущийПользователь или _ИзменениеОтветственногоВЗадачах);
    Элементы.ЗаданиеHTML.ТолькоПросмотр     = не (Объект.Автор = ПараметрыСеанса.ТекущийПользователь или _ИзменениеОтветственногоВЗадачах);
    Элементы.ГруппаШапка.ТолькоПросмотр     = не (Объект.Автор = ПараметрыСеанса.ТекущийПользователь или _ИзменениеОтветственногоВЗадачах);
    Элементы.Важная.ТолькоПросмотр          = не (Объект.Автор = ПараметрыСеанса.ТекущийПользователь или _ИзменениеОтветственногоВЗадачах);
    
    
    
    
КонецПроцедуры

#КонецОбласти

#Область РаботаСВложениями

&НаКлиенте
Процедура РаботаСВложениями(Отказ, Действие)
    
    Отказ = Истина;
    
    Если Действие = "Добавление" тогда 
        
        РаботаСФайламиКлиент.ДобавитьФайлы(Объект.Заявка, УникальныйИдентификатор,,,новый ОписаниеОповещения("ВыборФайлаЗавершение",ЭтаФорма));
        
    Иначе 
        
        ПоказатьВопрос(новый ОписаниеОповещения("УдалениеФайлаЗавершение",ЭтаФорма), "Удалить файл?", РежимДиалогаВопрос.ДаНет);
        
    КонецЕсли;
    
КонецПроцедуры

&НаКлиенте
Процедура ВыборФайлаЗавершение(массивФайлов, ДП) Экспорт 
    
    для Каждого стр из массивФайлов цикл
        
        Вложения.Добавить(стр,,Истина);
        
    КонецЦикла;
    
    Модифицированность = Истина;
    
КонецПроцедуры

&НаКлиенте
Процедура УдалениеФайлаЗавершение(ответ, ДП) Экспорт 
    
    Если ответ = КодВозвратаДиалога.Да тогда
        УдалитьФайл(Элементы.Вложения.ТекущиеДанные.Значение);
        Вложения.Удалить(Вложения.НайтиПоЗначению(Элементы.Вложения.ТекущиеДанные.Значение));
    КонецЕсли;
    
КонецПроцедуры

&НаСервере
Процедура УдалитьФайл(Файл) Экспорт 
    
    ФайлОбъект = Файл.ПолучитьОбъект();
    ФайлОбъект.Удалить();
    
КонецПроцедуры

#КонецОбласти

#Область СобытияЭлементов

&НаКлиенте      
Процедура ЗаявкаПриИзменении(Элемент)
    
    ЗаполнитьСотрудников(); 
    Оформление();

КонецПроцедуры

&НаСервере
Процедура СотрудникПриИзмененииНаСервере()
    
    Оформление();
    
КонецПроцедуры

&НаКлиенте
Процедура СотрудникПриИзменении(Элемент)
    
    СотрудникПриИзмененииНаСервере();
    
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСотрудников()
    
    Элементы.Сотрудник.СписокВыбора.Очистить();
    Элементы.Сотрудник.СписокВыбора.ЗагрузитьЗначения(Объект.Заявка.Смета.ВыгрузитьКолонку("Сотрудник")) ;
    
    Если Объект.Заявка.Контрагент <> Объект.КонтактноеЛицо.Владелец тогда
        Объект.КонтактноеЛицо = "";
    КонецЕсли;
    Если объект.Исполнитель<>Справочники.Пользователи.ПустаяСсылка() и Элементы.Сотрудник.СписокВыбора.НайтиПоЗначению(Объект.Исполнитель) = Неопределено тогда
        Элементы.Сотрудник.СписокВыбора.Добавить(Объект.Исполнитель)     
    КонецЕсли;
    
КонецПроцедуры

&НаКлиенте
Процедура ОтветственныйПриИзменении(Элемент)
    
    Оформление();
    
КонецПроцедуры

&НаКлиенте
Процедура ВажнаяПриИзменении(Элемент)
    Оформление();
КонецПроцедуры

&НаКлиенте
Процедура ВложенияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
    РаботаСВложениями(Отказ, "Добавление")
КонецПроцедуры

&НаКлиенте
Процедура ВложенияПередУдалением(Элемент, Отказ)
    РаботаСВложениями(Отказ, "Удаление")
КонецПроцедуры

&НаКлиенте
Процедура ВложенияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
    
    ДанныеФайла = Неопределено;
    Файл = Вложения.НайтиПоИдентификатору(ВыбраннаяСтрока).Значение;
    _ОбщийМодульСервер.ОбновитьПредпросмотр(ДанныеФайла,Файл,УникальныйИдентификатор);
    Если ДанныеФайла = Неопределено тогда 
        _ОткрытьФайл(Элемент, Файл, Поле, СтандартнаяОбработка,УникальныйИдентификатор);
        Возврат; 
    КонецЕсли;
    ОткрытьФорму("Обработка._РабочийСтол_Заявки.Форма.ПросмотрВложения",новый Структура("Файл,Заголовок",ДанныеФайла,Файл),ЭтаФорма);
    
КонецПроцедуры

&НаСервере
Процедура СоздатьЗаявкуНаОснованииСервер(Форма)
    
    ЗаполнитьЗначенияСвойств( Форма,Объект.Заявка,"Контрагент,КонтактноеЛицо, Приоритет, Организация");
    Форма.Основание = Объект.Заявка;
    Форма.Описание = Объект.Наименование;
    Форма.НазначенаНа = Объект.Исполнитель;
    Если Объект.Автор <> Объект.Исполнитель тогда
        СтрокаОтв = Форма.Смета.Добавить();
        СтрокаОтв.Объект.Исполнитель = Объект.Автор;
        СтрокаОтв.Роль = СтрокаОтв.Объект.Исполнитель.Роль;
    КонецЕсли;
    СтрокаОтв = Форма.Смета.Добавить();
    СтрокаОтв.Объект.Исполнитель = Объект.Исполнитель;
    СтрокаОтв.Роль = СтрокаОтв.Объект.Исполнитель.Роль;
    
    СтрокаОтв.ПлановыеЧасы = Объект.ЧасыПлановые;
    
    стр = Форма.ЧекЛисты.Добавить();
    
    стр.ЧасыПлановые = 8;
    стр.Ответственный = Объект.Автор;
    стр.ДатаПланОтветственный = Объект.ДатаПлановая;
    стр.Задание = Объект.Наименование;
    стр.Сотрудник = Объект.Исполнитель;
    
КонецПроцедуры

#КонецОбласти


#Область КомандыФормы

&НаКлиенте
Процедура ОткрытьИнструкциюПоОсмечиванию(Команда)
    
    _ОбщийМодуль_Клиент.ОткрытьВ1С(ФайлОсмечивания());
    
КонецПроцедуры

&НаСервере
Функция ФайлОсмечивания()
    
    Возврат Справочники._ВопросыИОтветы.НайтиПоКоду("000000005");
    
КонецФункции

&НаКлиенте
Процедура СоздатьЗаявкуНаОсновании(Команда)
    
    ФормаПодчиненного = ОткрытьФорму("Документ._Заявка.Форма.ФормаДокументаНовая");
    ОбъектФормы = ФормаПодчиненного.Объект;
    
    СоздатьЗаявкуНаОснованииСервер(ОбъектФормы);
    
    КопироватьДанныеФормы(ОбъектФормы, ФормаПодчиненного.Объект);
    
    ФормаПодчиненного.Модифицированность = Истина;
    
    Модифицированность = Ложь;
    Закрыть();
    
КонецПроцедуры

&НаКлиенте
Процедура Отменить(Команда)
    
    Если Объект.Отменена тогда
        ПоказатьПредупреждение(,"Задача уже отменена");
    иначе
        ПоказатьВопрос(новый ОписаниеОповещения("ОтменитьЗавершение", ЭтаФорма),
        "Отменить задачу " + ?(Модифицированность," (текущие изменения будут отменены)","") + " ?",РежимДиалогаВопрос.ДаНет) ;
    КонецЕсли;
    
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьЗавершение(Ответ,ДП) Экспорт
    
    Если Ответ = КодВозвратаДиалога.Да тогда
        
        Объект.Отменена = Истина;
        Записать();
        ОтменитьПодчиненныеЗадачи();
        Прочитать();
        
    КонецЕсли;
    
КонецПроцедуры

&НаСервере
Процедура ОтменитьПодчиненныеЗадачи() Экспорт
    
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    |   _ИсполнениеЗадач.Ссылка КАК Ссылка,
    |   КОЛИЧЕСТВО(_РаботыЗаДень.Часы) КАК Часы
    |ИЗ
    |   Задача._ИсполнениеЗадач КАК _ИсполнениеЗадач
    |       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений._РаботыЗаДень КАК _РаботыЗаДень
    |       ПО (_РаботыЗаДень.Задача = _ИсполнениеЗадач.Ссылка)
    |ГДЕ
    |   _ИсполнениеЗадач.ПометкаУдаления = ЛОЖЬ
    |   И _ИсполнениеЗадач.Выполнена = ЛОЖЬ
    |   И _ИсполнениеЗадач.БизнесПроцесс = &БизнесПроцесс
    |
    |СГРУППИРОВАТЬ ПО
    |   _ИсполнениеЗадач.Ссылка
    |
    |ИМЕЮЩИЕ
    |   КОЛИЧЕСТВО(_РаботыЗаДень.Часы) = 0";
    
    Запрос.УстановитьПараметр("БизнесПроцесс", Объект.Ссылка);
    
    РезультатЗапроса = Запрос.Выполнить();
    
    ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
    
    Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
        Задача = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
        Задача.УстановитьПометкуУдаления(Истина);
    КонецЦикла;
    
КонецПроцедуры


&НаКлиенте
Процедура ЗаданиеИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
    //ОформлениеЗадания();
КонецПроцедуры

&НаКлиенте
Процедура ЗаданиеОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
    //ОформлениеЗадания();
КонецПроцедуры

&НаКлиенте
Процедура ЧасыПлановыеПриИзменении(Элемент)
    
    ОкруглитьДоЧетвертиЧаса(Объект.ЧасыПлановые);    
    
КонецПроцедуры

&НаКлиенте
Процедура ВопросЗавершение(Ответ, ДП) Экспорт 
    
    Если Ответ = КодВозвратаДиалога.Да тогда
        
        ТолькоПросмотр = Истина;
        
    Иначе 
        
        ЭтаФорма.Закрыть();
        
    КонецЕсли;
    
КонецПроцедуры

&НаКлиенте
Процедура ЗаявкаОткрытие(Элемент, СтандартнаяОбработка)
    //Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ЗаданиеHTMLПриИзменении(Элемент)
    
    Если ТолькоПросмотр тогда  
        Прочитать();
        Сообщить("Изменения отменены, доступно только чтение текста задачи");
    иначе
        ЗаполнитьТекстЗадания();
    КонецЕсли;
    
КонецПроцедуры

&Насервере
Процедура ЗаполнитьТекстЗадания(ДанныеHTML = Неопределено)
    
    Если ДанныеHTML = Неопределено тогда
        ДанныеHTML = _ОбщийМодульСервер.СохранитьHTML(ЗаданиеHTML);
    КонецЕсли;
    
    Объект.Наименование = ДанныеHTML.мОписание;
    
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
    Записать();
    Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура КонтактноеЛицоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
    СтандартнаяОбработка = Ложь;
    ОткрытьФорму("Справочник._КонтактныеЛица.ФормаВыбора",новый Структура("Владелец",Контрагент()),Элемент); 
КонецПроцедуры
&НаСервере
Функция  Контрагент()
    Возврат объект.Заявка.Контрагент;
КонецФункции

&НаКлиенте
Процедура НомерСервисДескПриИзменении(Элемент)
    Объект.НомерСервисДеск = СтрЗаменить(объект.НомерСервисДеск," ","");
КонецПроцедуры

&НаКлиенте
Процедура ВидОбращенияПриИзменении(Элемент)
  Оформление();
КонецПроцедуры

#КонецОбласти




