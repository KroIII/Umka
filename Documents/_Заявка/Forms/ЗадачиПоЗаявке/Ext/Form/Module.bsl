
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    
    //ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Задания,"Заявка",Параметры.Заявка);
     Заявка = Параметры.Заявка;
    
    ОбновитьНаСервере();
    
КонецПроцедуры

 &НаСервере
Процедура ОбновитьНаСервере()
    мДанныеРасшифровки = Неопределено;
    
    ОтчетЗадачи.Очистить();
     //Получаем схему из макета
    СхемаКомпоновкиДанных = Документы._Заявка.ПолучитьМакет("Задачи");    
    
    
    //Из схемы возьмем настройки по умолчанию
    Настройки = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
    //Помещаем в переменную данные о расшифровке данных
    Расшифровка = Новый ДанныеРасшифровкиКомпоновкиДанных;    
    //Формируем макет, с помощью компоновщика макета
    КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;  
    
     
    мЗаявка = Настройки.ПараметрыДанных.Элементы.Найти("Заявка");
    мЗаявка.Значение = Заявка;
     мТолькоНезакрытые = Настройки.ПараметрыДанных.Элементы.Найти("ТолькоНезакрытые");
    мТолькоНезакрытые.Значение = ТолькоНезакрытые;
     
    лКомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
    
    лМакетКомпоновкиДанных = лКомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,Настройки,Расшифровка);
    лПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
    лПроцессорКомпоновкиДанных.Инициализировать(лМакетКомпоновкиДанных,,Расшифровка);
    лПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
    лПроцессорВывода.УстановитьДокумент(ОтчетЗадачи);
    лПроцессорВывода.Вывести(лПроцессорКомпоновкиДанных,Истина);
    ДанныеРасшифровки = ПоместитьВоВременноеХранилище(Расшифровка, УникальныйИдентификатор);
    
КонецПроцедуры
 &НаКлиенте
Процедура Обновить(Команда)
    ОбновитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ТолькоНезакрытыеПриИзменении(Элемент)
    ОбновитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОтчетЗадачиОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка, ДополнительныеПараметры)
    
    СтандартнаяОбработка = Ложь;
    Попытка
        ПоказатьЗначение(, ОтчетОбработкаРасшифровкиС(Расшифровка) );
    Исключение
    КонецПопытки;
    
КонецПроцедуры

&НаСервере
Функция ОтчетОбработкаРасшифровкиС(Расшифровка)
    
    мДанныеРасшифровки = ПолучитьИзВременногоХранилища(ДанныеРасшифровки);
    Если ТипЗнч(Расшифровка) = Тип("ИдентификаторРасшифровкиКомпоновкиДанных") тогда
        ЭлементРасшифровки = мДанныеРасшифровки.Элементы[Расшифровка];
        возврат  ЭлементРасшифровки.ПолучитьПоля()[0].Значение 
    КонецЕсли;
    
КонецФункции

