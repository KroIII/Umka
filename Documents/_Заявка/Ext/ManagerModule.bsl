
Процедура ПеренестиВсеНевыставленныеЧасыИзЗадач(Объект) Экспорт 
    ВызватьИсключение("не актуальна");
    ТАблицаВыставленных = Объект.ЧекЛисты.Выгрузить(,"КодСтроки,Задача");
    ВыборкаДетальныеЗаписи  = Объект.ПолучитьНеперенесенныеЗадачи(ТАблицаВыставленных);
    
    
    Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
        строкаЧл = Объект.чекЛисты.НайтиСтроки(Новый Структура("КодСтроки,Задача",ВыборкаДетальныеЗаписи.КодСтроки,ВыборкаДетальныеЗаписи.Задача)) ;
        Если ВыборкаДетальныеЗаписи.Удалить тогда
            Объект.ЧекЛисты.Удалить(строкаЧл[0]);
        иначе
            Если строкаЧл.Количество()  тогда
                строкаЧл = строкаЧл[0];    
            Иначе 
                строкаЧл                = Объект.чекЛисты.Добавить();
        КонецЕсли;
        
        строкаЧл.Ответственный  = ВыборкаДетальныеЗаписи.БизнесПроцесс.Автор;
        строкаЧл.Сотрудник      = ВыборкаДетальныеЗаписи.Задача.Исполнитель;
        строкаЧл.Часы           = ВыборкаДетальныеЗаписи.Часы;
        строкаЧл.ЧасыКлиенту    = ?(ВыборкаДетальныеЗаписи.НеВыставлятьКонтрагенту,0, ВыборкаДетальныеЗаписи.Часы);
        строкаЧл.Описание       = ВыборкаДетальныеЗаписи.Описание;
        строкаЧл.ЭтоЗадание     = Истина;
        строкаЧл.Важная         = ВыборкаДетальныеЗаписи.БизнесПроцесс.Срочная;
        строкаЧл.Дата           = ВыборкаДетальныеЗаписи.Дата;
        строкаЧл.Задание        = ВыборкаДетальныеЗаписи.БизнесПроцесс.Наименование + ?(ВыборкаДетальныеЗаписи.Задача.ОписаниеДоработки <> "" , Символы.ПС + ВыборкаДетальныеЗаписи.Задача.ОписаниеДоработки,"");
        //  строкаЧл.ЗаданиеHTML    = ВыборкаДетальныеЗаписи.БизнесПроцесс.ЗаданиеHTML;
        строкаЧл.Задача         = ВыборкаДетальныеЗаписи.Задача;
        строкаЧл.КодСтроки      = ВыборкаДетальныеЗаписи.КодСтроки;
        КонецЕсли;
    КонецЦикла;
    
    
    ВыборкаДетальныеЗаписи = Объект.ПолучитьНеперенесенныеРС(ТАблицаВыставленных);
    
    
    Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
        
        Если ВыборкаДетальныеЗаписи.кодстроки = новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000")  тогда
            Продолжить;
        КонецЕсли;
        строкаЧл = Объект.чекЛисты.НайтиСтроки(новый Структура("КодСтроки, Задача",ВыборкаДетальныеЗаписи.КодСтроки,Задачи._ИсполнениеЗадач.ПустаяСсылка())) ;
        
        Если ВыборкаДетальныеЗаписи.Удалить тогда
            Объект.ЧекЛисты.Удалить(строкаЧл[0]);
        иначе
            Если строкаЧл.Количество()  тогда
                строкаЧл = строкаЧл[0];    
            Иначе 
                строкаЧл                = Объект.чекЛисты.Добавить();
            КонецЕсли;
            
            ЗаполнитьЗначенияСвойств(строкаЧл,ВыборкаДетальныеЗаписи);
        КонецЕсли;  
    КонецЦикла;
    
    
КонецПроцедуры


Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
    
    Если не ЗначениеЗаполнено( Данные.ссылка ) тогда возврат КонецЕсли;
    СтандартнаяОбработка = Ложь; 
    Номер = Данные.ссылка.Номер;
    Попытка
        Номер = Число(Номер);
    Исключение;
    КонецПопытки;
    Представление =  ""+ Формат(Номер, "ЧДЦ=0; ЧГ=0") + " от " + Формат(Данные.ссылка.Дата,"ДФ=dd.MM.yy")+ " :   " + Данные.ссылка.Контрагент + " :  "+Данные.ссылка.Название 
    
КонецПроцедуры

Процедура ПечатьОписания(ТабДок, Ссылка) Экспорт
    
    //{{_КОНСТРУКТОР_ПЕЧАТИ(Печатть описания)
    Макет = Документы._Заявка.ПолучитьМакет("ПечатьОписания");
    Запрос = Новый Запрос;
    Запрос.Текст =
    "ВЫБРАТЬ
    |	Заявка.Автор,
    |	Заявка.Дата,
    |	Заявка.Коментарий,
    |	Заявка.КонтактноеЛицо,
    |	Заявка.Контрагент,
    |	Заявка.Название,
    |	Заявка.Номер,
    |	Заявка.Описание,
    |	Заявка.СогласованныеЧасы,
    |	Заявка.Статус,
    |	Заявка.Смета.(
    |		НомерСтроки,
    |		Сотрудник
    |	)
    |ИЗ
    |	Документ._Заявка КАК Заявка
    |ГДЕ
    |	Заявка.Ссылка В (&Ссылка)";
    Запрос.Параметры.Вставить("Ссылка", Ссылка);
    Выборка = Запрос.Выполнить().Выбрать();
    
    ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
    Шапка = Макет.ПолучитьОбласть("Шапка");
    ОбластьСметаШапка = Макет.ПолучитьОбласть("СметаШапка");
    ОбластьСмета = Макет.ПолучитьОбласть("Смета");
    Подвал = Макет.ПолучитьОбласть("Подвал");
    
    ТабДок.Очистить();
    
    ВставлятьРазделительСтраниц = Ложь;
    Пока Выборка.Следующий() Цикл
        Если ВставлятьРазделительСтраниц Тогда
            ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
        КонецЕсли;
        
        ТабДок.Вывести(ОбластьЗаголовок);
        
        Шапка.Параметры.Заполнить(Выборка);
        ТабДок.Вывести(Шапка, Выборка.Уровень());
        
        
        Подвал.Параметры.Заполнить(Выборка);
        ТабДок.Вывести(Подвал);
        
        
        ТабДок.Вывести(ОбластьСметаШапка);
        
        ВыборкаСмета = Выборка.Смета.Выбрать();
        Пока ВыборкаСмета.Следующий() Цикл
            ОбластьСмета.Параметры.Заполнить(ВыборкаСмета);
            ТабДок.Вывести(ОбластьСмета, ВыборкаСмета.Уровень());
        КонецЦикла;
        
        ВставлятьРазделительСтраниц = Истина;
    КонецЦикла;
    //}}
КонецПроцедуры


Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
    
    СтандартнаяОбработка = Ложь;
    Запрос = Новый Запрос;
    Запрос.Текст = 
    "ВЫБРАТЬ
    | Заявка.Ссылка КАК Ссылка
    |ИЗ
    | Документ._Заявка КАК Заявка
    |ГДЕ
    | (Заявка.Название ПОДОБНО &СтрокаПоиска
    |         ИЛИ Заявка.Номер ПОДОБНО &СтрокаПоиска)"  ;
    
    
    Запрос.УстановитьПараметр("СтрокаПоиска", "%" + Параметры.СтрокаПоиска + "%");
    
    РезультатЗапроса = Запрос.Выполнить();
    Таблица = РезультатЗапроса.Выгрузить();
    Массив = Таблица.ВыгрузитьКолонку("Ссылка");
    
    ДанныеВыбора = Новый СписокЗначений;
    ДанныеВыбора.ЗагрузитьЗначения(Массив);
    
КонецПроцедуры


Процедура Печать_ЛУВР_ЭЗОИС(ТабДок, Ссылка, Период) Экспорт
    ВызватьИсключение("не актуальна");
    //{{_КОНСТРУКТОР_ПЕЧАТИ(Печать_ЛУВР_ЭЗОИС)
    Макет = Документы._Заявка.ПолучитьМакет("Печать_ЛУВР_ЭЗОИС");
    Запрос = Новый Запрос;
    Запрос.Текст =
    "ВЫБРАТЬ
    |   ВЫБОР
    |       КОГДА Заявка.Техподдержка
    |           ТОГДА &Дата
    |       КОГДА Заявка.ДатаАкта = ДАТАВРЕМЯ(1, 1, 1)
    |           ТОГДА Заявка.ДатаОкончания
    |       ИНАЧЕ Заявка.ДатаАкта
    |   КОНЕЦ КАК Дата,
    |   Заявка.Номер КАК Номер,
    |   Заявка.ЧекЛисты.(
    |       НомерСтроки КАК НомерСтроки,
    |       Дата КАК Дата,
    |       Часы КАК Часы,
    |       ВЫБОР
    |           КОГДА Заявка.ЧекЛисты.Задание = """"
    |               ТОГДА """"
    |           ИНАЧЕ Заявка.ЧекЛисты.Задание + "" - ""
    |       КОНЕЦ + Заявка.ЧекЛисты.Описание КАК Описание
    |   ) КАК ЧекЛисты
    |ИЗ
    |   Документ._Заявка КАК Заявка
    |ГДЕ
    |   Заявка.Ссылка = &Ссылка
    |   И ВЫБОР
    |           КОГДА Заявка.Техподдержка
    |               ТОГДА Заявка.ЧекЛисты.Дата МЕЖДУ &Дата И &Дата1
    |           ИНАЧЕ ИСТИНА
    |       КОНЕЦ
    |
    |УПОРЯДОЧИТЬ ПО
    |   НомерСтроки";
    Запрос.Параметры.Вставить("Ссылка", Ссылка);
    Запрос.Параметры.Вставить("Дата", Период.ДатаНачала);
    Запрос.Параметры.Вставить("Дата1", Период.ДатаОкончания);
    Выборка = Запрос.Выполнить().Выбрать();
    
    Шапка = Макет.ПолучитьОбласть("Шапка");
    ОбластьЧекЛистыШапка = Макет.ПолучитьОбласть("ЧекЛистыШапка");
    ОбластьЧекЛисты = Макет.ПолучитьОбласть("ЧекЛисты");
    ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
    ТабДок.Очистить();
    
    ВставлятьРазделительСтраниц = Ложь;
    Пока Выборка.Следующий() Цикл
        Если ВставлятьРазделительСтраниц Тогда
            ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
        КонецЕсли;
        Итого = 0;
        
        Шапка.Параметры.Заполнить(Выборка);
        Шапка.Параметры.Дата = НРег(Формат(Выборка.Дата, "ДФ='MMMM yyyy'"));
        
        ТабДок.Вывести(Шапка, Выборка.Уровень());
        ТабДок.Вывести(ОбластьЧекЛистыШапка);
        ВыборкаЧекЛисты = Выборка.ЧекЛисты.Выбрать();
        Пока ВыборкаЧекЛисты.Следующий() Цикл
            ОбластьЧекЛисты.Параметры.Заполнить(ВыборкаЧекЛисты);
            ОбластьЧекЛисты.Параметры.Дата  = НРег(Формат(ВыборкаЧекЛисты.Дата,"ДФ=dd.MM.yy"));
            Итого = Итого + ВыборкаЧекЛисты.Часы ;
            ТабДок.Вывести(ОбластьЧекЛисты, ВыборкаЧекЛисты.Уровень());
        КонецЦикла;
        ОбластьПодвал.Параметры.Итого = Итого;
        ТабДок.Вывести(ОбластьПодвал, Выборка.Уровень());
        
        ВставлятьРазделительСтраниц = Истина;
    КонецЦикла;
    //}}
КонецПроцедуры

